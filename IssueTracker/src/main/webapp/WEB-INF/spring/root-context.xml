<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Root Context: определяет ресурсы, доступные всему приложению, всем сервлетам -->
	
	<!-- Включаем опцию использования конфигурационных аннотаций (@Annotation-based configuration)-->
	<context:annotation-config />

	<!-- Определяем папки, в которых будем автоматически искать бины-компоненты (@Component, @Service)  -->
	<context:component-scan base-package="org.example.issuetracker.dao.persistence" />
	<context:component-scan base-package="org.example.issuetracker.service.impl" />
	
	<!-- Файл с настройками ресурсов для работы с данными (Data Access Resources) -->
	<import resource="data.xml" />
				
	<!-- Файл с настройками безопасности -->
	<import resource="security.xml" />
	
	<!-- Mail -->
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
  		<property name="host" value="smtp.gmail.com"/>
        <property name="port" value="25"/>
        <property name="username" value="issuetracker164@gmail.com"/>
        <property name="password" value="issue164"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
                <prop key="java.net.preferIPv4Stack">true</prop>
            </props>
        </property>
	</bean>

	<!-- this is a template message that we can pre-load with default state -->
	<bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
  		<property name="from" value="admin@example.org"/>
 		<property name="subject" value="Issue"/>
	</bean>
	<!-- View Resolver-->
	<!-- 
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="contentNegotiationManager">
			<bean class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
			 	<property name="mediaTypes">
					<map>
						<entry key="json" value="application/json" />
						<entry key="xml" value="text/xml" />
						<entry key="htm" value="text/html" />
					</map>
				</property>
				<property name="defaultContentType" value="text/html" />
			</bean>
		</property>
	</bean>
	 -->
	<!-- multipart -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		p:maxUploadSize="500000000" />
	
</beans>